{
	"R.layout."
    : 
    "Resource.Layout."
    ,
	"R.id."
    : 
    "Resource.Id."
    ,
    "R.menu."
    :
    "Resource.Menu."
    ,
    "R.@string."
    :
    "Resource.String."
    ,
    "protected internal override void OnCreate(Bundle"
    :
    "protected override void OnCreate(Bundle"
    ,
    "public override void OnCreate(Bundle"
    :
    "protected override void OnCreate(Bundle"
    ,
    "DialogInterface.OnClickListener"
    :
    "Java.lang.Object, IDialogInterfaceOnClickListener"
    ,
    "RadioGroup.OnCheckedChangeListener"
    :
    "Moka.Lang.Object, RadioGroup.IOnCheckedChangeListener"
    ,
    "onClick(DialogInterface"
    :
    "OnClick(IDialogInterface"
    ,
    "onClick("
    :
    "OnClick("
    ,
    "onCreateOptionsMenu(Menu"
    :
    "OnCreateOptionsMenu(IMenu"
    ,
    "findViewById("
    :
    "FindViewById<>("
    ,
    "onActivityResult("
    :
    "OnActivityResult("
    ,
    ".openInputStream("
    :
    ".OpenInputStream("
    ,
    "protected override void OnActivityResult(int requestCode, Result resultCode, Intent data)"
    :
    "protected override void OnActivityResult(int requestCode, int resultCode, Intent data)"
    ,
    "onPrepareOptionsMenu(Menu"
    :
    "OnPrepareOptionsMenu(IMenu"
    ,
    ".toArray("
    :
    ".ToArray("
    ,
    ".show("
    :
    ".Show("
    ,
    ".setTitle("
    :
    ".SetTitle("
    ,
    ".setItems("
    :
    ".SetItems("
    ,
    ".setPositiveButton("
    :
    ".SetPositiveButton("
    ,
    ".setNegativeButton("
    :
    ".SetNegativeButton("
    ,
    ".create()"
    :
    ".Create()"
    ,
    ".setMargin("
    :
    ".SetMargin("
    ,
    ".getSystemService("
    :
    ".GetSystemService("
    ,
    "LAYOUT_INFLATER_SERVICE"
    :
    "LayoutInflaterService"
    ,
    "Toast.makeText("
    :
    "Toast.MakeText("
    ,
    "Toast.LENGTH_SHORT"
    :
    "ToastLength.Short"
    ,
    "Toast.LENGTH_LONG"
    :
    "ToastLength.Long"
    ,
    "Intent.ACTION_PICK"
    :
    "Intent.ActionPick"
    ,
    "MediaStore.Images.Media.CONTENT_TYPE"
    :
    "MediaStore.Images.Media.ContentType"
    ,
    "Looper.prepare()"
    :
    "Looper.Prepare()"
	,
	"Looper.loop()"
	:
	"Looper.Loop()"
	,
	"View getView(int "
	:
	"View GetView(int "
	,
	".inflate("
	:
	".Inflate("
	,
	"android.R.layout.simple_list_item_1"
	:
	"Android.Resource.Layout.SimpleListItem1"
	,
	"android.R.id.text1"
	:
	"Android.Resource.Id.Text1"
	,
	"SetContentView = R.layout."
	:
	"SetContentView(Resource.Layout."
	,
	"protected internal override void onPause("
	:
	"protected internal override void OnPause("
	,
	"base.onPause"
	:
	"base.OnPause"
	,
	"protected internal override void onResume"
	:
	"protected override void OnResume"
	,
	"base.onResume"
	:
	"base.OnResume"
	,
	"protected internal override void onDestroy"
	:
	"protected override void OnDestroy"
	,
	"base.onDestroy"
	:
	"base.OnDestroy"
	,
	"public override bool onCreateOptionsMenu(Menu"
	:
	"public override bool OnCreateOptionsMenu(IMenu"
	,
	"startActivityForResult"
	:
	"StartActivityForResult"
	,
	".arg2"
	:
	".Arg2"
	,
	""
	:
	""
	public override void OnStop()
    protected override void OnStop()
    
    public override void OnResume()
    protected override void OnResume()
    
    public override void OnDestroy()
    protected override void OnDestroy()
    
    finish();
    Finish();
    
    Context.AUDIO_SERVICE
    
    AudioManager.MODE_NORMAL
    Mode.Normal
    
    AudioManager.USE_DEFAULT_STREAM_TYPE
    AudioManager.UseDefaultStreamType
    
    Intent.FLAG_ACTIVITY_CLEAR_TOP
    ActivityFlags.ClearTop
    
    Intent.FLAG_ACTIVITY_SINGLE_TOP
    ActivityFlags.SingleTop
    
    Context.BIND_AUTO_CREATE
    Bind.AutoCreate
    
    Paint.ANTI_ALIAS_FLAG
    PaintFlags.AntiAlias
    
    protected internal override void onDraw(
    
    drawCircle(
    DrawCircle(
    
    centerX()
    CenterX()
    
    protected internal override void onSizeChanged(
    protected override void OnSizeChanged(

    TileMode.CLAMP
    Android.Graphics.Shader.TileMode.Clamp
    
    .onSizeChanged(
    .OnSizeChanged(
    
    .letf
    .Left
    
    .right
    .Right
    
    .top
    .Top
    
    .bottom
    .Bottom
    
    Paint.Style.FILL
    Paint.Style.Fill
    
    setIcons(
    SetIcons(
    
    invalidate();
    Invalidate();
    
    onTouchEvent(
    OnTouchEvent(
    
    MotionEventCompat.getActionMasked(
    MotionEventCompat.GetActionMasked(
    
    MotionEvent.ACTION_DOWN
    MotionEventActions.Down
    
    public override void onAudioLevelUpdated(
    public void OnAudioLevelUpdated(
    
    
    
    
    
    
    
    
    
    
    
    
}
